# 一、题目

> 微博上有个自称“大笨钟V”的家伙，每天敲钟催促码农们爱惜身体早点睡觉。不过由于笨钟自己作息也不是很规律，所以敲钟并不定时。一般敲钟的点数是根据敲钟时间而定的，如果正好在某个整点敲，那么“当”数就等于那个整点数；如果过了整点，就敲下一个整点数。另外，虽然一天有24小时，钟却是只在后半天敲1~12下。例如在23:00敲钟，就是“当当当当当当当当当当当”，而到了23:01就会是“当当当当当当当当当当当当”。在午夜00:00到中午12:00期间（端点时间包括在内），笨钟是不敲的。
下面就请你写个程序，根据当前时间替大笨钟敲钟。

**输入格式：**
> 输入第一行按照hh:mm的格式给出当前时间。其中hh是小时，在00到23之间；mm是分钟，在00到59之间。

**输出格式：**
根据当前时间替大笨钟敲钟，即在一行中输出相应数量个Dang。如果不是敲钟期，则输出：

> Only hh:mm.  Too early to Dang.

其中hh:mm是输入的时间。
**输入样例1：**

> 19:05

**输出样例1：**

> DangDangDangDangDangDangDangDang

**输入样例2：**

> 07:05

**输出样例2：**

>Only 07:05.  Too early to Dang.


# 二、解决方案
# 1.思路
本题思路不难，我们只需要按照题目要求计算即可，需要注意的有：
①如果时间在1-9，输出格式应该补0，这里我们输出用%02d的方法，表示输出两位，不足两位补0
②注意12：01这样的时间，也会敲一次

——————————————
# 2.代码

```c
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
int main()
{
	int h, m;
	scanf("%d:%d", &h, &m);
	if (h >= 0 && h <=11||(h==12&&m==0))
	{
		printf("Only %02d:%02d.  Too early to Dang.", h, m);
	}
	else
	{
		h = h - 12;
		if (m > 0)
			h++;
		for (int i = 0; i < h; i++)
			{
				printf("Dang");
			}
	}
	return 0;
}
```





