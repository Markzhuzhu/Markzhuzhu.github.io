# 一、题目

> 给定一个长度不超过10000的、仅由英文字母构成的字符串。请将字符重新调整顺序，按GPLTGPLT....这样的顺序输出，并忽略其它字符。当然，四种字符（不区分大小写）的个数不一定是一样多的，若某种字符已经输出完，则余下的字符仍按GPLT的顺序打印，直到所有字符都被输出。
> 
> 
**输入格式：**
> 输入在一行中给出一个长度不超过10000的、仅由英文字母构成的非空字符串。

**输出格式：**

> 在一行中按题目要求输出排序后的字符串。题目保证输出非空。


**输入样例1：**

pcTclnGloRgLrtLhgljkLhGFauPewSKgt

**输出样例1：**

GPLTGPLTGLTGLGLL



 

# 二、解决方案
# 1.思路
我们先定义一个数组来存放字符串，然后题目说不区分大小写，但是输出全是大写，那我们就先把所有的字母都转化成大写（注意小写字母的ASCII码值比大写字母的值大32，所以我们-32），然后统计我们需要打印的GPLT这四个字母各出现多少次，然后打印，没打印一次，统计的值-1，直到统计的值为0为止。

————————————————————
# 2.代码

```c
#define _CRT_SECURE_NO_WARNINGS 1
#include <stdio.h>
#include <string.h>
int main()
{
	char str[10000] = { 0 };
	scanf("%s", str);
	int q = 0, w = 0, e = 0, r = 0;
	for (int i = 0; i < strlen(str); i++)
	{
		if (str[i] >= 'a' && str[i] <= 'z')
		{
			str[i] -= 32;
		}
		if (str[i] == 'G')
		{
			q++;
		}
		 if (str[i] == 'P')
		{
			w++;
		}
		 if (str[i] == 'L')
		{
			e++;
		}
		 if (str[i] == 'T')
		 {
			 r++;
		 }
	}
	while (q!=0||w!=0 || e!=0 ||r !=0 )
	{
		if (q != 0)
		{
			printf("G");
			q--;
		}
		if (w != 0)
		{
			printf("P");
			w--;
		}
		if (e != 0)
		{
			printf("L");
			e--;
		}
		if (r != 0)
		{
			printf("T");
			r--;
		}
	}
	return 0;
}
```

